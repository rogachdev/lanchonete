var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};

const pms = require("../interface/permission.json");
const db = require("../interface/db_Sheets");
const fnc = require("../helpers/helpers");
const gestor = require("../models/_gestor");
const dados = require("../models/_dados");

const moment = __importDefault(require("moment"));
const fs = require("fs");

// Apresenta√ß√£o das Op√ß√µes do Menu Principal
function execute(user, msg, client) {

    console.log('Est√°gio: ' + dados[user].stage, 'Arquivo: 1');

    // Op√ß√£o * - Cancelamento do Pedido
    // stage 0
    if (msg === '*' && dados[user]._human == false) {
        return fnc.fncgetFinish(user);
    }

    let _msgRetorno = [];
    /*if (msg.toLowerCase() == 'voltar' && dados[user]._human == false) {
        dados[user].stage = 0;
        return ['Est√°gio: ' + dados[user].stage];
    }*/

    if ((dados[user]._phone_name == '' || dados[user]._phone_name == undefined || dados[user]._phone_name == 'undefined')) {
        if (dados[user]._phone_incl == '' && msg == '1') {
            dados[user].stage = 1;
            dados[user]._phone_incl = '1';
            return [`üë©üèΩ‚Äçü¶± -> ` + ' _Para comer√ßarmos por favor, *informe o seu nome*_'];
        }
        if (dados[user]._phone_incl == '1') {
            dados[user]._phone_incl = '0';
            dados[user]._phone_name = msg;
            let _editCliente = {
                NomeCliente: msg,
                NomeInformado: msg,
            }
            db.fncEditDados('Clientes', 'Codigo', dados[user]._id_user, _editCliente);
            msg = '1'
        }
    }

    // 1¬™ Verifica√ß√£o - Verifica se o valor informado est√° permitido ou se √© inv√°lido!
    // Stage = 1

    if (!gestor[pms.p]._menu_opcao.value[0]['0'].includes(msg)
        && dados[user]._human == false) {
        _msgRetorno = [`üë©üèΩ‚Äçü¶± -> ` + '‚ùå Op√ß√£o inv√°lida!'];
        dados[user].stage = 1;
        return _msgRetorno;
    }

    // Op√ß√£o 0 - Finalizar
    if (msg == '0' && dados[user]._human == false) {
        return fnc.fncgetFinish(user);
    }


    let header = ``;
    let conteudo = ``;
    let footer = ``;
    let msgText = '';

    //  apresentar Catalogo de produtos para pesquisa
    if (msg == '10' && dados[user]._human == false) {
        header = `üë©üèΩ‚Äçü¶± -> ` + 'Ok, segue a nossa lista de produtos.';
        let _catalogo = gestor[pms.p]._produto._searchProd_list;

        dados[user]._type.type_option = 'chat';

        footer = dados[user]._type.type_text = 'üë©üèΩ‚Äçü¶± -> ' + 'Para realizar uma *pesquisa mais detalhada* Informe o *Nome* do produto ou parte dele.';
        msgText = dados[user]._type.type_text  = 'üë©üèΩ‚Äçü¶± -> ' + 'Ou se preferir  voltar ao menu digite *Voltar*.';
        dados[user].stage = 2;
        _msgRetorno = [header, _catalogo, footer, msgText];

        return _msgRetorno;
    }

    // Op√ß√£o 1 - Fazer Pedido e apresentar Catalogo
    // Stage -> 2
    if (msg == '1' && dados[user]._human == false) {
        if (dados[user]._pedido._itens.length == 0) {
            header = `üë©üèΩ‚Äçü¶± -> ` + 'Ok, segue o nosso cat√°logo de produtos.';
            let _catalogo = gestor[pms.p]._produto._catalogo;
            footer =
                `üë©üèΩ‚Äçü¶± -> ` + 'Informe o *C√≥digo* do produto desejado:',
                `üë©üèΩ‚Äçü¶± -> ` + `Ou se preferir digite *Ô∏è‚É£ para *Finalizar* atendimento.`;

            dados[user].stage = 2;
            _msgRetorno = [_catalogo, footer];
        } else {
            let _resumoPedido = fnc.fncPedidoResumo(user);
            let _contato = '';

            if (dados[user]._phone_name != '' || dados[user]._phone_name != undefined || dados[user]._phone_name != 'undefined') {
                _contato = '*' + (String(dados[user]._phone_name).split(' ')[0]) + '*, ';
            }

            let _texto =
                `üë©üèΩ‚Äçü¶± -> ` + 'Oi ' + _contato + 'Identificamos que voc√™ possui um pedido em aberto.';
            _resumoPedido.unshift(_texto);

            dados[user].stage = 3;
            _msgRetorno = _resumoPedido;
        }
        return _msgRetorno;
    }

    // Op√ß√£o 2 - Pesquisar Produto
    // Stage -> 8
    if (msg == '2' && dados[user]._human == false) {

        dados[user].stage = 8;
        _msgRetorno = [`üßæ ` + ` *Pesquisa de Produto(s)*`,
        `üë©üèΩ‚Äçü¶± -> ` + `_Informe o nome do Produto ou parte do nome._`
        ]
        return _msgRetorno;
    }

    // Op√ß√£o 3 - Listar Card das Promo√ß√µes
    // Stage = 1
    if (msg == '3' && dados[user]._human == false) {
        let _textPromocao = `üë©üèΩ‚Äçü¶± -> ` + ' Aqui est√£o os nossos produtos na promo√ß√£o...';
        dados[user]._promotion = true;
        dados[user].stage = 1;
        return [_textPromocao];
    }

    // Op√ß√£o 4 - Falar com atendente
    // Stage = 1

    if (msg == '4' && dados[user]._human == false) {
        header = 'üßîüèΩ' + ` _Iniciando_ *Atendimento Humano*,\nPor favor aguarde... \n\n`;
        conteudo = [
            `_Estamos direcionado voc√™ para o atendimento humanizado. Aguarde, em alguns minutos iremos te atender._ \n\n`];
        footer = `_Para voltar ao *atendimento virtual* Digite *Ô∏è‚É£_ \n`;
        let msg1 = 'üö®' + ' *E n√£o se esque√ßa que para voltar ao [ATENDIMENTO VIRTUAL], voc√™ precisa digitar *Ô∏è‚É£*';
        let msgOpcao = header + msg1;
        // let msgOpcao = header + conteudo + footer;
        dados[user]._human = true;
        dados[user]._human_atend =
            `_Ol√°, meu nome √© *${pms.atend}*_` + '\n' +
            `Em que posso te ajudar?`;
        return [msgOpcao];
    }

    // if (msg == '4' && dados[user]._human == false) {

    //     dados[user]._type.type_option = 'contato';

    //     let msg = `üë©üèΩ‚Äçü¶± -> ` + `_Para falar com um dos nossos atendentes, por favor mande uma mensagem para o contato abaixo._ \n `;
    //     let msg2 = ' üë©üèΩ‚Äçü¶± -> ' + '_E para finalizar o seu atendimento basta digitar 0Ô∏è‚É£._ ';
    //     return [msg, msg2];
    // }

    if (msg == '*') {
        dados[user]._type.type_option = 'chat';
        let msgMessage = `üë©üèΩ‚Äçü¶± -> ` + `Oi, agora o seu atendimento √© pelo *assistente virtual*.\n`;
        msgMessage += gestor[pms.p]._menu_opcao.menu[4];
        dados[user]._human = false;
        dados[user]._human_chat = false;
        dados[user].stage = 1;
        return [msgMessage];
    }

    // Op√ß√£o 5 - Nossa Localiza√ß√£o
    // Stage = 1
    if (msg == '5' && dados[user]._human == false) {
        header = `üë©üèΩ‚Äçü¶± -> ` + `"Que legal, vou te passar a nossa localiza√ß√£o!` + '\n';
        //header += `üìå *ENDERE√áO* \n`;
        header += `üë©üèΩ‚Äçü¶± -> ` + `_Nosso endere√ßo de localiza√ß√£o._ \n`;
        conteudo = `- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -` + `\n`;
        conteudo += `*${pms.address}* \n`;
        conteudo += `Cep: *${pms.zip}* \n`;
        conteudo += `Munic√≠pio: *${pms.city}* \n`;
        conteudo += `Estado: *${pms.state}* \n`;
        conteudo += `- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -` + `\n`;
        let msgOpcao = header + conteudo;

        dados[user]._type.type_option = 'location';
        dados[user].stage = 1;
        return [`${pms.address}, ${pms.zip} - ${pms.city} / ${pms.state}`, msgOpcao];
    }

    // 2¬™Verifica√ß√£o - Caso chegou aqui houve um erro, e ser√° inicializado o atendimento
    // Stage <- 0
    dados[user].stage = 1;
    return [`üë©üèΩ‚Äçü¶± -> ` + ' Digite uma op√ß√£o v√°lida!'];

}

exports.execute = execute;